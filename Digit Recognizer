#include <mlboard/mlboard.hpp>
#include <iostream>
#include <chrono> 
#include <ctime> 
#include <future>
using namespace std;
using namespace mlboard;
using namespace arma;
using namespace mlpack;
int main()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;
    std::chrono::time_point<std::chrono::system_clock> start, end; 
    start = std::chrono::system_clock::now(); 
    FileWriter f1("jeffin");
    mat tempDataset;
    data::Load("train.csv", tempDataset, true);
    // Specify the height width and channel.
    data::ImageInfo info(28, 28, 1, 90);
    arma::Mat<unsigned char> dataset = conv_to<  arma::Mat<unsigned char> >::from(tempDataset.submat(1, 1,
        tempDataset.n_rows - 1, 50)); 
    std::cout<<dataset.n_cols<<std::endl;
    std::cout<<dataset.n_rows<<std::endl;
    mlboard::SummaryWriter<mlboard::FileWriter>::Image(
         "Multiple Image", 1, dataset , info, f1, "Sample DIGITS Image",
         "This is a Sample image logged using mlboard ");
    f1.Close(); 
    end = std::chrono::system_clock::now(); 
    std::chrono::duration<double> elapsed_seconds = end - start; 
    std::time_t end_time = std::chrono::system_clock::to_time_t(end); 
    std::cout << "finished computation at " << std::ctime(&end_time) 
              << "elapsed time: " << elapsed_seconds.count() << "s\n"; 
    google::protobuf::ShutdownProtobufLibrary();
}
